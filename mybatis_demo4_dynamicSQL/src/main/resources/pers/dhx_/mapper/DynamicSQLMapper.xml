<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="pers.dhx_.mapper.DynamicSQLMapper">

    <select id="getEmpByCondition" resultType="Emp">
        <!--    只有传过来的是一个实体类 的对象时，才可以直接通过 属性名来访问-->
        select *from t_emp
<!--where 标签 自动生成where 关键字， 并且 如果后面where 直接跟了一个and ，会把这个多余的and去掉 ，内容后面多余的and不会-->
        <trim prefix="WHERE" prefixOverrides="and">
            <if test="empName!=null and empName!='' "> <!-- empName 不为空并且不是空字符串 -->
                and   emp_name=#{empName}
            </if>
            <if test="age!=null and age!='' "> <!-- age 不为空并且不是空字符串 -->
                and  age=#{age}
            </if>
            <if test="gender!=null and gender!='' "> <!-- age 不为空并且不是空字符串 -->
                and  gender=#{gender}
            </if>
        </trim>
    </select>

<!--    List<Emp> getEmpByChoose(Emp emp);-->
    <select id="getEmpByChoose" resultType="Emp">
        select *from t_emp
        <where>
            <choose> <!--这个是if -else 形式，如果满足了一个 那么下面的都不会管了-->
                <when test="empName!=null and empName != '' ">emp_name=#{empName}</when>
                <when test="age!=null and age != '' ">age=#{age}</when>
                <when test="gender!=null and gender != '' ">gender=#{gender}</when>
            </choose>
        </where>
    </select>
    

    
<!--     void insertMoreEmp(@Param("emps")List<Emp> emps);-->
    <insert id="insertMoreEmp">
        insert into t_emp values
        <foreach collection="emps" item="emp" separator=","> <!-- 使emp 表示 当前的对象 separator 表示分隔符-->
            (null,#{emp.empName},#{emp.age},#{emp.gender},#{emp.deptId})
        </foreach>
    </insert>

<!--    void deleteMoreEmp(@Param("empIds")Integer []empIds);-->
    <delete id="deleteMoreEmp1">  <!-- 使用 where id in []-->
        delete from t_emp where emp_id in
        (
        <foreach collection="empIds" item="empId" separator=","> <!-- 使emp 表示 当前的对象 separator 表示分隔符-->
            #{empId}
        </foreach>
        )
    </delete>

    <delete id="deleteMoreEmp2">  <!-- 使用 where id in []-->
        delete from t_emp where   <!-- open 和 close 表示当前循环的内容以 什么开始，以什么结束-->
            <foreach collection="empIds" item="empId" separator="," open="(" close=")"> <!-- 使emp 表示 当前的对象 separator 表示分隔符-->
                emp_id=#{empId}
            </foreach>
    </delete>

    <delete id="deleteMoreEmp">  <!-- 使用 where id in []-->
        delete from t_emp where   <!-- open 和 close 表示当前循环的内容以 什么开始，以什么结束-->
        <foreach collection="empIds" item="empId" separator="or" open="(" close=")"> <!-- 使emp 表示 当前的对象 separator 表示分隔符-->
            emp_id=#{empId}
        </foreach>
    </delete>

    <sql id="empColumns"> <!--idea 不知道为什么报错 ， 但是时间代码可以正常运行-->
        emp_id,emp_name,age,gender, dept_id
    </sql>
<!--    测试上面的sql 片段
    Emp getEmpById(@Param("empId") Integer empId);
-->
    <select id="getEmpById" resultType="Emp">
        select <include refid="empColumns"/> from t_emp where emp_id=#{empId};
<!--通过日志验证 -日志：DEBUG 07-23 16:02:23,721 ==>
        Preparing: select emp_id , emp_name,age,gender, dept_id from t_emp where emp_id=?;  -->
    </select>

</mapper>
